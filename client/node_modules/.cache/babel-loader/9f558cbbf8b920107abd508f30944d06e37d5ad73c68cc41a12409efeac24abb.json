{"ast":null,"code":"var _jsxFileName = \"/Users/valgaug/Documents/Coding/CodeWorks/SoloProject/solo-project/solo-project-proposal/client/src/Components/06-00-Documentation/index.js\";\nimport React from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Doc() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doc\",\n    id: \"doc-id\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"firstHeading\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"What is a fractal?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A fractal is a never ending pattern that repeats itself at different scales. This property is called \\u201CSelf-Similarity.\\u201D Fractals are extremely complex, sometimes infinitely complex - meaning you can zoom in and find the same shapes forever. Amazingly, fractals are extremely simple to make. A fractal is made by repeating a simple process again and again. You can find fractals in Nature, in Geometry and in Algebra.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"secondHeading\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Natural Fractal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Branching\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Fractals are found all over nature, spanning a huge range of scales. We find the same patterns again and again, from the tiny branching of our blood vessels and neurons to the branching of trees, lightning bolts, and river networks. Regardless of scale, these patterns are all formed by repeating a simple branching process. A fractal is a picture that tells the story of the process that created it.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Spiral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Fractals are found all over nature, spanning a huge range of scales. We find the same patterns again and again, from the tiny branching of our blood vessels and neurons to the branching of trees, lightning bolts, and river networks. Regardless of scale, these patterns are all formed by repeating a simple branching process. A fractal is a picture that tells the story of the process that created it.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Doc;\nexport default Doc;\nvar _c;\n$RefreshReg$(_c, \"Doc\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Doc","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/valgaug/Documents/Coding/CodeWorks/SoloProject/solo-project/solo-project-proposal/client/src/Components/06-00-Documentation/index.js"],"sourcesContent":["import React from 'react';\nimport './style.css';\n\nfunction Doc() {\n  return (\n    <div className='doc' id='doc-id'>\n      <h1 className='firstHeading'>\n        <span>What is a fractal?</span>\n      </h1>\n      <p>\n        A fractal is a never ending pattern that repeats itself at different\n        scales. This property is called “Self-Similarity.” Fractals are\n        extremely complex, sometimes infinitely complex - meaning you can zoom\n        in and find the same shapes forever. Amazingly, fractals are extremely\n        simple to make. A fractal is made by repeating a simple process again\n        and again. You can find fractals in Nature, in Geometry and in Algebra.\n      </p>\n      <h1 className='secondHeading'>\n        <span>Natural Fractal</span>\n      </h1>\n      <h2>\n        <span>Branching</span>\n      </h2>\n      <p>\n        Fractals are found all over nature, spanning a huge range of scales. We\n        find the same patterns again and again, from the tiny branching of our\n        blood vessels and neurons to the branching of trees, lightning bolts,\n        and river networks. Regardless of scale, these patterns are all formed\n        by repeating a simple branching process. A fractal is a picture that\n        tells the story of the process that created it.\n      </p>\n      <h2>\n        <span>Spiral</span>\n      </h2>\n      <p>\n        Fractals are found all over nature, spanning a huge range of scales. We\n        find the same patterns again and again, from the tiny branching of our\n        blood vessels and neurons to the branching of trees, lightning bolts,\n        and river networks. Regardless of scale, these patterns are all formed\n        by repeating a simple branching process. A fractal is a picture that\n        tells the story of the process that created it.\n      </p>\n    </div>\n  );\n}\n\nexport default Doc;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAACC,EAAE,EAAC,QAAQ;IAAAC,QAAA,gBAC9BJ,OAAA;MAAIE,SAAS,EAAC,cAAc;MAAAE,QAAA,eAC1BJ,OAAA;QAAAI,QAAA,EAAM;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5B,eACLR,OAAA;MAAAI,QAAA,EAAG;IAOH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACJR,OAAA;MAAIE,SAAS,EAAC,eAAe;MAAAE,QAAA,eAC3BJ,OAAA;QAAAI,QAAA,EAAM;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB,eACLR,OAAA;MAAAI,QAAA,eACEJ,OAAA;QAAAI,QAAA,EAAM;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB,eACLR,OAAA;MAAAI,QAAA,EAAG;IAOH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACJR,OAAA;MAAAI,QAAA,eACEJ,OAAA;QAAAI,QAAA,EAAM;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChB,eACLR,OAAA;MAAAI,QAAA,EAAG;IAOH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEV;AAACC,EAAA,GAzCQR,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}