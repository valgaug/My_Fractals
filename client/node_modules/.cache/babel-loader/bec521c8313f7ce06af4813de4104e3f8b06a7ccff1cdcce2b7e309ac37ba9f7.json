{"ast":null,"code":"var _jsxFileName = \"/Users/valgaug/Documents/Coding/CodeWorks/SoloProject/solo-project/solo-project-proposal/client/src/Components/05-02-PythagorasTree/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Sketch from 'react-p5';\nimport './style.css';\nimport canvasToImage from 'canvas-to-image';\nimport * as ApiService from '../../ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tree(_ref) {\n  _s();\n  let {\n    hide,\n    setHide,\n    post,\n    setPost\n  } = _ref;\n  const [iteration, setIteration] = useState(6);\n  const [angle, setAngle] = useState(45);\n  const [ratio, setRatio] = useState(0.55);\n  const canvasRef = useRef(null);\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(730, 520).parent(canvasParentRef);\n    canvasRef.current = p5.canvas;\n  };\n  const draw = p5 => {\n    let rightTheta;\n    let leftTheta;\n    let recursion = 0;\n\n    //recursive branch function\n    const branch = h => {\n      h *= ratio;\n      if (recursion < iteration) {\n        recursion++;\n        p5.push(); // Save the current state of transformation (i.e. where are we now)\n        p5.rotate(theta);\n        p5.line(0, 0, 0, -h); // Draw the branch\n        p5.translate(0, -h); // Move to the end of the branch\n        branch(h); // Ok, now call myself to draw two new branches!!\n        p5.pop(); // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\n\n        // Repeat the same thing, only branch off to the \"left\" this time!\n        p5.push();\n        p5.rotate(-theta);\n        p5.line(0, 0, 0, -h);\n        p5.translate(0, -h);\n        branch(h);\n        p5.pop();\n        recursion--;\n      }\n    };\n    p5.background(0);\n    p5.stroke(255);\n    let a = angle;\n    theta = p5.radians(a);\n    p5.translate(p5.width / 2, p5.height);\n    p5.line(0, 0, 0, -120);\n    p5.translate(0, -120);\n    branch(120);\n  };\n  const saveCanvasAsImage = async () => {\n    canvasToImage(canvasRef.current);\n  };\n  const postCanvasAsImage = async () => {\n    setHide(true);\n    await ApiService.postImage(canvasRef.current);\n    setPost(!post);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree\",\n    style: {\n      display: hide ? 'none' : 'block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Iterations: \", iteration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        name: \"tree\",\n        id: \"iteration\",\n        min: \"0\",\n        max: \"12\",\n        step: \"1\",\n        value: iteration,\n        onChange: e => {\n          setIteration(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Angle: \", angle, \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        name: \"tree\",\n        id: \"angle\",\n        min: \"0\",\n        max: \"90\",\n        step: \"1\",\n        value: angle,\n        onChange: e => {\n          setAngle(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Branch ratio: \", ratio]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        name: \"tree\",\n        id: \"ratio\",\n        min: \"0.5\",\n        max: \"0.79\",\n        step: \"0.01\",\n        value: ratio,\n        onChange: e => {\n          setRatio(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: postCanvasAsImage,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveCanvasAsImage,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"close\",\n      onClick: () => setHide(true),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Tree, \"y+Gnr5I+MaPtjObEfRWAQswIL2U=\");\n_c = Tree;\nexport default Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["React","useState","useRef","Sketch","canvasToImage","ApiService","jsxDEV","_jsxDEV","Tree","_ref","_s","hide","setHide","post","setPost","iteration","setIteration","angle","setAngle","ratio","setRatio","canvasRef","setup","p5","canvasParentRef","createCanvas","parent","current","canvas","draw","rightTheta","leftTheta","recursion","branch","h","push","rotate","theta","line","translate","pop","background","stroke","a","radians","width","height","saveCanvasAsImage","postCanvasAsImage","postImage","className","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","min","max","step","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/valgaug/Documents/Coding/CodeWorks/SoloProject/solo-project/solo-project-proposal/client/src/Components/05-02-PythagorasTree/index.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Sketch from 'react-p5';\nimport './style.css';\nimport canvasToImage from 'canvas-to-image';\nimport * as ApiService from '../../ApiService';\n\nfunction Tree({ hide, setHide, post, setPost }) {\n  const [iteration, setIteration] = useState(6);\n  const [angle, setAngle] = useState(45);\n  const [ratio, setRatio] = useState(0.55);\n  const canvasRef = useRef(null);\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(730, 520).parent(canvasParentRef);\n    canvasRef.current = p5.canvas;\n  };\n\n  const draw = (p5) => {\n    let rightTheta;\n    let leftTheta;\n    let recursion = 0;\n\n    //recursive branch function\n    const branch = (h) => {\n      h *= ratio;\n      if (recursion < iteration) {\n        recursion++;\n        p5.push(); // Save the current state of transformation (i.e. where are we now)\n        p5.rotate(theta);\n        p5.line(0, 0, 0, -h); // Draw the branch\n        p5.translate(0, -h); // Move to the end of the branch\n        branch(h); // Ok, now call myself to draw two new branches!!\n        p5.pop(); // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\n\n        // Repeat the same thing, only branch off to the \"left\" this time!\n        p5.push();\n        p5.rotate(-theta);\n        p5.line(0, 0, 0, -h);\n        p5.translate(0, -h);\n        branch(h);\n        p5.pop();\n        recursion--;\n      }\n    };\n\n    p5.background(0);\n    p5.stroke(255);\n    let a = angle;\n    theta = p5.radians(a);\n    p5.translate(p5.width / 2, p5.height);\n    p5.line(0, 0, 0, -120);\n    p5.translate(0, -120);\n    branch(120);\n  };\n\n  const saveCanvasAsImage = async () => {\n    canvasToImage(canvasRef.current);\n  };\n\n  const postCanvasAsImage = async () => {\n    setHide(true);\n    await ApiService.postImage(canvasRef.current);\n    setPost(!post);\n  };\n\n  return (\n    <div className='tree' style={{ display: hide ? 'none' : 'block' }}>\n      <Sketch setup={setup} draw={draw} />\n\n      <form>\n        <label>Iterations: {iteration}</label>\n        <br />\n        <input\n          type='range'\n          name='tree'\n          id='iteration'\n          min='0'\n          max='12'\n          step='1'\n          value={iteration}\n          onChange={(e) => {\n            setIteration(e.target.value);\n          }}\n        ></input>{' '}\n        <br />\n        <label>Angle: {angle}Â°</label>\n        <br />\n        <input\n          type='range'\n          name='tree'\n          id='angle'\n          min='0'\n          max='90'\n          step='1'\n          value={angle}\n          onChange={(e) => {\n            setAngle(e.target.value);\n          }}\n        ></input>\n        <br />\n        <label>Branch ratio: {ratio}</label>\n        <br />\n        <input\n          type='range'\n          name='tree'\n          id='ratio'\n          min='0.5'\n          max='0.79'\n          step='0.01'\n          value={ratio}\n          onChange={(e) => {\n            setRatio(e.target.value);\n          }}\n        ></input>\n      </form>\n      <div className='buttons'>\n        <button onClick={postCanvasAsImage}>Submit</button>\n        <button onClick={saveCanvasAsImage}>Download</button>\n      </div>\n      <div className='close' onClick={() => setHide(true)}>\n        X\n      </div>\n    </div>\n  );\n}\n\nexport default Tree;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}