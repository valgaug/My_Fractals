{"ast":null,"code":"var _jsxFileName = \"/Users/valgaug/Documents/Coding/CodeWorks/SoloProject/solo-project/solo-project-proposal/client/src/Components/05-01-Tree/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Sketch from 'react-p5';\nimport './style.css';\nimport canvasToImage from 'canvas-to-image';\nimport * as ApiService from '../../ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThreeDTree(_ref) {\n  _s();\n  let {\n    hide3DTree,\n    setHide3DTree,\n    post,\n    setPost\n  } = _ref;\n  // const [iteration, setIteration] = useState(6);\n  // const [rightAngle, setRightAngle] = useState(30);\n  // const [leftAngle, setLeftAngle] = useState(30);\n  // const [ratio, setRatio] = useState(0.55);\n  const canvasRef = useRef(null);\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(730, 520, p5.WEBGL).parent(canvasParentRef);\n    canvasRef.current = p5.canvas;\n    p5.angleMode(p5.DEGREES);\n  };\n  const draw = p5 => {\n    p5.background(200);\n    p5.stroke(0);\n    p5.translate(0, 200, 0);\n    p5.rotateY(p5.frameCount);\n    const branch = len => {\n      p5.line(0, 0, 0, 0, -len, 0);\n      p5.translate(0, -len, 0);\n      if (len > 10) {\n        for (var i = 0; i < 3; i++) {\n          p5.rotateY(120);\n          p5.push();\n          p5.rotateZ(30);\n          branch(len * 0.8);\n          p5.pop();\n        }\n      }\n    };\n    branch(100);\n  };\n  const saveCanvasAsImage = async () => {\n    canvasToImage(canvasRef.current);\n  };\n  const postCanvasAsImage = async () => {\n    setHide3DTree(true);\n    await ApiService.postImage(canvasRef.current);\n    setPost(!post);\n  };\n  if (hide3DTree) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree\",\n    children: [/*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: postCanvasAsImage,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveCanvasAsImage,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"close\",\n      onClick: () => setHide3DTree(true),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(ThreeDTree, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n_c = ThreeDTree;\nexport default ThreeDTree;\nvar _c;\n$RefreshReg$(_c, \"ThreeDTree\");","map":{"version":3,"names":["React","useState","useRef","Sketch","canvasToImage","ApiService","jsxDEV","_jsxDEV","ThreeDTree","_ref","_s","hide3DTree","setHide3DTree","post","setPost","canvasRef","setup","p5","canvasParentRef","createCanvas","WEBGL","parent","current","canvas","angleMode","DEGREES","draw","background","stroke","translate","rotateY","frameCount","branch","len","line","i","push","rotateZ","pop","saveCanvasAsImage","postCanvasAsImage","postImage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/valgaug/Documents/Coding/CodeWorks/SoloProject/solo-project/solo-project-proposal/client/src/Components/05-01-Tree/index.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Sketch from 'react-p5';\nimport './style.css';\nimport canvasToImage from 'canvas-to-image';\nimport * as ApiService from '../../ApiService';\n\nfunction ThreeDTree({ hide3DTree, setHide3DTree, post, setPost }) {\n  // const [iteration, setIteration] = useState(6);\n  // const [rightAngle, setRightAngle] = useState(30);\n  // const [leftAngle, setLeftAngle] = useState(30);\n  // const [ratio, setRatio] = useState(0.55);\n  const canvasRef = useRef(null);\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(730, 520, p5.WEBGL).parent(canvasParentRef);\n    canvasRef.current = p5.canvas;\n    p5.angleMode(p5.DEGREES);\n  };\n\n  const draw = (p5) => {\n    p5.background(200);\n    p5.stroke(0);\n    p5.translate(0, 200, 0);\n    p5.rotateY(p5.frameCount);\n\n    const branch = (len) => {\n      p5.line(0, 0, 0, 0, -len, 0);\n      p5.translate(0, -len, 0);\n      if (len > 10) {\n        for (var i = 0; i < 3; i++) {\n          p5.rotateY(120);\n\n          p5.push();\n          p5.rotateZ(30);\n          branch(len * 0.8);\n          p5.pop();\n        }\n      }\n    };\n\n    branch(100);\n  };\n\n  const saveCanvasAsImage = async () => {\n    canvasToImage(canvasRef.current);\n  };\n\n  const postCanvasAsImage = async () => {\n    setHide3DTree(true);\n    await ApiService.postImage(canvasRef.current);\n    setPost(!post);\n  };\n\n  if (hide3DTree) {\n    return null;\n  }\n\n  return (\n    <div className='tree'>\n      <Sketch setup={setup} draw={draw} />\n      <form>\n        {/* <div className='parameter'>\n          <span>Iterations:</span>\n          <label>{iteration}</label>\n          <input\n            type='range'\n            name='tree'\n            id='iteration'\n            min='0'\n            max='12'\n            step='1'\n            value={iteration}\n            onChange={(e) => {\n              setIteration(e.target.value);\n            }}\n          ></input>\n        </div>\n        <div className='parameter'>\n          <span>Right Angle:</span>\n          <label>{rightAngle}°</label>\n          <input\n            type='range'\n            name='tree'\n            id='angle'\n            min='0'\n            max='90'\n            step='1'\n            value={rightAngle}\n            onChange={(e) => {\n              setRightAngle(e.target.value);\n            }}\n          ></input>\n          <br />\n        </div>\n        <div className='parameter'>\n          <span>Left Angle:</span>\n          <label>{leftAngle}°</label>\n          <input\n            type='range'\n            name='tree'\n            id='angle'\n            min='0'\n            max='90'\n            step='1'\n            value={leftAngle}\n            onChange={(e) => {\n              setLeftAngle(e.target.value);\n            }}\n          ></input>\n          <br />\n        </div>\n        <div className='parameter'>\n          <span>Branch ratio:</span>\n          <label>{ratio}</label>\n          <input\n            type='range'\n            name='tree'\n            id='ratio'\n            min='0.5'\n            max='0.79'\n            step='0.01'\n            value={ratio}\n            onChange={(e) => {\n              setRatio(e.target.value);\n            }}\n          ></input>\n        </div> */}\n      </form>\n      <div className='buttons'>\n        <button onClick={postCanvasAsImage}>Submit</button>\n        <button onClick={saveCanvasAsImage}>Download</button>\n      </div>\n      <div className='close' onClick={() => setHide3DTree(true)}>\n        X\n      </div>\n    </div>\n  );\n}\n\nexport default ThreeDTree;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}