{"ast":null,"code":"var _jsxFileName = \"/Users/valgaug/Documents/Coding/CodeWorks/SoloProject/solo-project/solo-project-proposal/client/src/Components/05-03-Mandelbrot/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Sketch from 'react-p5';\nimport './style.css';\nimport canvasToImage from 'canvas-to-image';\nimport * as ApiService from '../../ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mandelbrot(_ref) {\n  _s();\n  let {\n    hideMandelbrot,\n    setHideMandelbrot,\n    post,\n    setPost\n  } = _ref;\n  const [maxIterations, setMaxIterations] = useState(100);\n  const [param1, setParam1] = useState(43);\n  const [param2, setParam2] = useState(15);\n  const [param3, setParam3] = useState(129);\n  const [param4, setParam4] = useState(46);\n  const [param5, setParam5] = useState(659);\n  const canvasRef = useRef(null);\n  let slider;\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(730, 520).parent(canvasParentRef);\n    // p5.frameRate(10);\n    p5.pixelDensity(1);\n    canvasRef.current = p5.canvas;\n    slider = p5.createSlider(0, 200, 100, 1);\n  };\n  const draw = p5 => {\n    const sliderValue = p5.slider.value();\n    // p5.noLoop();\n    // p5.loop();\n    console.log(sliderValue);\n    p5.background(0);\n    p5.stroke(255);\n    p5.colorMode(p5.HSB, sliderValue);\n\n    // Establish a range of values on the complex plane\n    // A different range will allow us to \"zoom\" in or out on the fractal\n\n    // It all starts with the width, try higher or lower values\n    const w = 3.5;\n    const h = w * p5.height / p5.width;\n\n    // Start at negative half the width and height\n    const xmin = -w / 1.5;\n    const ymin = -h / 2;\n\n    // Make sure we can write to the pixels[] array.\n    // Only need to do this once since we don't do any other drawing.\n    p5.loadPixels();\n\n    // Maximum number of iterations for each point on the complex plane\n    // const maxiterations = iterations;\n\n    // x goes from xmin to xmax\n    const xmax = xmin + w;\n    // y goes from ymin to ymax\n    const ymax = ymin + h;\n\n    // Calculate amount we increment x,y for each pixel\n    const dx = (xmax - xmin) / p5.width;\n    const dy = (ymax - ymin) / p5.height;\n\n    // Start y\n    let y = ymin;\n    for (let j = 0; j < p5.height; j++) {\n      // Start x\n      let x = xmin;\n      for (let i = 0; i < p5.width; i++) {\n        // Now we test, as we iterate z = z^2 + cm does z tend towards infinity?\n        let a = x;\n        let b = y;\n        let n = 0;\n        while (n < maxIterations) {\n          const aa = a * a;\n          const bb = b * b;\n          const twoab = 2.0 * a * b;\n          a = aa - bb + x;\n          b = twoab + y;\n          // Infinity in our finite world is simple, let's just consider it 16\n          if (p5.dist(aa, bb, 0, 0) > 16) {\n            break; // Bail\n          }\n\n          n++;\n        }\n\n        // We color each pixel based on how long it takes to get to infinity\n        // If we never got there, let's pick the color black\n        const pix = (i + j * p5.width) * 4;\n        const hue = p5.map(n, 0, maxIterations, param2, param3); //Hue is expressed in degrees, from red(0), through all the colors around the color wheel, and back to red (360).\n        let lig = p5.map(n, 0, maxIterations, param4, param5); //Brighness the amount of light, ranging between 0 and 100. The alpha channel goes from 0 (not visible) to 1 (fully opaque).\n\n        let colorHSB = p5.color(hue, 100, lig); //Saturation is the amount of color, and ranges between 0 and 100.\n        let colorRGB = colorHSB.levels;\n        if (n === maxIterations) {\n          lig = 0;\n          // setParam5(0);\n        } else {\n          // Gosh, we could make fancy colors here if we wanted\n          p5.pixels[pix + 0] = colorRGB[0];\n          p5.pixels[pix + 1] = colorRGB[1];\n          p5.pixels[pix + 2] = colorRGB[2];\n          p5.pixels[pix + 3] = 255;\n        }\n        x += dx;\n      }\n      y += dy;\n    }\n    p5.updatePixels();\n  };\n  const saveCanvasAsImage = async () => {\n    canvasToImage(canvasRef.current);\n  };\n  const postCanvasAsImage = async () => {\n    setHideMandelbrot(true);\n    await ApiService.postImage(canvasRef.current);\n    setPost(!post);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mandelbrot\",\n    style: {\n      display: hideMandelbrot ? 'none' : 'block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parameter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Iterations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: maxIterations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          name: \"mandelbrot\",\n          id: \"iteration\",\n          min: \"0\",\n          max: \"200\",\n          step: \"5\",\n          value: maxIterations,\n          onChange: e => {\n            setMaxIterations(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parameter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"HSB range:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: param1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          name: \"mandelbrot\",\n          id: \"HSB_range\",\n          min: \"0\",\n          max: \"100\",\n          step: \"1\",\n          value: param1,\n          onChange: e => {\n            setParam1(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parameter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Hue start:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: param2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          name: \"mandelbrot\",\n          id: \"param1\",\n          min: \"0\",\n          max: \"200\",\n          step: \"1\",\n          value: param2,\n          onChange: e => {\n            setParam2(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parameter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Hue end:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: param3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          name: \"mandelbrot\",\n          id: \"param1\",\n          min: \"0\",\n          max: \"200\",\n          step: \"1\",\n          value: param3,\n          onChange: e => {\n            setParam3(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parameter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Brightness start:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: param4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          name: \"mandlebrot\",\n          id: \"param1\",\n          min: \"0\",\n          max: \"800\",\n          step: \"1\",\n          value: param4,\n          onChange: e => {\n            setParam4(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parameter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Brightness end:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: param5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          name: \"mandelbrot\",\n          id: \"param1\",\n          min: \"0\",\n          max: \"800\",\n          step: \"1\",\n          value: param5,\n          onChange: e => {\n            setParam5(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: postCanvasAsImage,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveCanvasAsImage,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"close\",\n      onClick: () => setHideMandelbrot(true),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(Mandelbrot, \"JzOYIp9BB+BoBk7Y86oPzmqhVlI=\");\n_c = Mandelbrot;\nexport default Mandelbrot;\nvar _c;\n$RefreshReg$(_c, \"Mandelbrot\");","map":{"version":3,"names":["React","useState","useRef","Sketch","canvasToImage","ApiService","jsxDEV","_jsxDEV","Mandelbrot","_ref","_s","hideMandelbrot","setHideMandelbrot","post","setPost","maxIterations","setMaxIterations","param1","setParam1","param2","setParam2","param3","setParam3","param4","setParam4","param5","setParam5","canvasRef","slider","setup","p5","canvasParentRef","createCanvas","parent","pixelDensity","current","canvas","createSlider","draw","sliderValue","value","console","log","background","stroke","colorMode","HSB","w","h","height","width","xmin","ymin","loadPixels","xmax","ymax","dx","dy","y","j","x","i","a","b","n","aa","bb","twoab","dist","pix","hue","map","lig","colorHSB","color","colorRGB","levels","pixels","updatePixels","saveCanvasAsImage","postCanvasAsImage","postImage","className","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","min","max","step","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/valgaug/Documents/Coding/CodeWorks/SoloProject/solo-project/solo-project-proposal/client/src/Components/05-03-Mandelbrot/index.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Sketch from 'react-p5';\nimport './style.css';\nimport canvasToImage from 'canvas-to-image';\nimport * as ApiService from '../../ApiService';\n\nfunction Mandelbrot({ hideMandelbrot, setHideMandelbrot, post, setPost }) {\n  const [maxIterations, setMaxIterations] = useState(100);\n  const [param1, setParam1] = useState(43);\n  const [param2, setParam2] = useState(15);\n  const [param3, setParam3] = useState(129);\n  const [param4, setParam4] = useState(46);\n  const [param5, setParam5] = useState(659);\n\n  const canvasRef = useRef(null);\n\n  let slider;\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(730, 520).parent(canvasParentRef);\n    // p5.frameRate(10);\n    p5.pixelDensity(1);\n    canvasRef.current = p5.canvas;\n    slider = p5.createSlider(0, 200, 100, 1);\n  };\n\n  const draw = (p5) => {\n    const sliderValue = p5.slider.value();\n    // p5.noLoop();\n    // p5.loop();\n    console.log(sliderValue);\n    p5.background(0);\n    p5.stroke(255);\n    p5.colorMode(p5.HSB, sliderValue);\n\n    // Establish a range of values on the complex plane\n    // A different range will allow us to \"zoom\" in or out on the fractal\n\n    // It all starts with the width, try higher or lower values\n    const w = 3.5;\n    const h = (w * p5.height) / p5.width;\n\n    // Start at negative half the width and height\n    const xmin = -w / 1.5;\n    const ymin = -h / 2;\n\n    // Make sure we can write to the pixels[] array.\n    // Only need to do this once since we don't do any other drawing.\n    p5.loadPixels();\n\n    // Maximum number of iterations for each point on the complex plane\n    // const maxiterations = iterations;\n\n    // x goes from xmin to xmax\n    const xmax = xmin + w;\n    // y goes from ymin to ymax\n    const ymax = ymin + h;\n\n    // Calculate amount we increment x,y for each pixel\n    const dx = (xmax - xmin) / p5.width;\n    const dy = (ymax - ymin) / p5.height;\n\n    // Start y\n    let y = ymin;\n    for (let j = 0; j < p5.height; j++) {\n      // Start x\n      let x = xmin;\n      for (let i = 0; i < p5.width; i++) {\n        // Now we test, as we iterate z = z^2 + cm does z tend towards infinity?\n        let a = x;\n        let b = y;\n        let n = 0;\n        while (n < maxIterations) {\n          const aa = a * a;\n          const bb = b * b;\n          const twoab = 2.0 * a * b;\n          a = aa - bb + x;\n          b = twoab + y;\n          // Infinity in our finite world is simple, let's just consider it 16\n          if (p5.dist(aa, bb, 0, 0) > 16) {\n            break; // Bail\n          }\n          n++;\n        }\n\n        // We color each pixel based on how long it takes to get to infinity\n        // If we never got there, let's pick the color black\n        const pix = (i + j * p5.width) * 4;\n\n        const hue = p5.map(n, 0, maxIterations, param2, param3); //Hue is expressed in degrees, from red(0), through all the colors around the color wheel, and back to red (360).\n        let lig = p5.map(n, 0, maxIterations, param4, param5); //Brighness the amount of light, ranging between 0 and 100. The alpha channel goes from 0 (not visible) to 1 (fully opaque).\n\n        let colorHSB = p5.color(hue, 100, lig); //Saturation is the amount of color, and ranges between 0 and 100.\n        let colorRGB = colorHSB.levels;\n\n        if (n === maxIterations) {\n          lig = 0;\n          // setParam5(0);\n        } else {\n          // Gosh, we could make fancy colors here if we wanted\n          p5.pixels[pix + 0] = colorRGB[0];\n          p5.pixels[pix + 1] = colorRGB[1];\n          p5.pixels[pix + 2] = colorRGB[2];\n          p5.pixels[pix + 3] = 255;\n        }\n        x += dx;\n      }\n      y += dy;\n    }\n    p5.updatePixels();\n  };\n\n  const saveCanvasAsImage = async () => {\n    canvasToImage(canvasRef.current);\n  };\n\n  const postCanvasAsImage = async () => {\n    setHideMandelbrot(true);\n    await ApiService.postImage(canvasRef.current);\n    setPost(!post);\n  };\n\n  return (\n    <div\n      className='mandelbrot'\n      style={{\n        display: hideMandelbrot ? 'none' : 'block',\n      }}\n    >\n      <Sketch setup={setup} draw={draw} />\n      <form>\n        <div className='parameter'>\n          <span>Iterations:</span>\n          <label>{maxIterations}</label>\n          <input\n            type='range'\n            name='mandelbrot'\n            id='iteration'\n            min='0'\n            max='200'\n            step='5'\n            value={maxIterations}\n            onChange={(e) => {\n              setMaxIterations(e.target.value);\n            }}\n          ></input>\n        </div>\n        <div className='parameter'>\n          <span>HSB range:</span>\n          <label>{param1}</label>\n          <input\n            type='range'\n            name='mandelbrot'\n            id='HSB_range'\n            min='0'\n            max='100'\n            step='1'\n            value={param1}\n            onChange={(e) => {\n              setParam1(e.target.value);\n            }}\n          ></input>\n          <br />\n        </div>\n        <div className='parameter'>\n          <span>Hue start:</span>\n          <label>{param2}</label>\n          <input\n            type='range'\n            name='mandelbrot'\n            id='param1'\n            min='0'\n            max='200'\n            step='1'\n            value={param2}\n            onChange={(e) => {\n              setParam2(e.target.value);\n            }}\n          ></input>\n          <br />\n        </div>\n        <div className='parameter'>\n          <span>Hue end:</span>\n          <label>{param3}</label>\n          <input\n            type='range'\n            name='mandelbrot'\n            id='param1'\n            min='0'\n            max='200'\n            step='1'\n            value={param3}\n            onChange={(e) => {\n              setParam3(e.target.value);\n            }}\n          ></input>\n          <br />\n        </div>\n        <div className='parameter'>\n          <span>Brightness start:</span>\n          <label>{param4}</label>\n          <input\n            type='range'\n            name='mandlebrot'\n            id='param1'\n            min='0'\n            max='800'\n            step='1'\n            value={param4}\n            onChange={(e) => {\n              setParam4(e.target.value);\n            }}\n          ></input>\n          <br />\n        </div>\n        <div className='parameter'>\n          <span>Brightness end:</span>\n          <label>{param5}</label>\n          <input\n            type='range'\n            name='mandelbrot'\n            id='param1'\n            min='0'\n            max='800'\n            step='1'\n            value={param5}\n            onChange={(e) => {\n              setParam5(e.target.value);\n            }}\n          ></input>\n          <br />\n        </div>\n      </form>\n      <div className='buttons'>\n        <button onClick={postCanvasAsImage}>Submit</button>\n        <button onClick={saveCanvasAsImage}>Download</button>\n      </div>\n      <div className='close' onClick={() => setHideMandelbrot(true)}>\n        X\n      </div>\n    </div>\n  );\n}\n\nexport default Mandelbrot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}