{"ast":null,"code":"var _jsxFileName = \"/Users/valgaug/Documents/Coding/CodeWorks/SoloProject/solo-project/solo-project-proposal/client/src/Components/05-03-Mandelbrot/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Sketch from 'react-p5';\nimport './style.css';\nimport canvasToImage from 'canvas-to-image';\nimport * as ApiService from '../../ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Fern(_ref) {\n  _s();\n  let {\n    hideMandelbrot,\n    setHideMandelbrot,\n    post,\n    setPost\n  } = _ref;\n  // const [iterations, setIterations] = useState(50000);\n  const canvasRef = useRef(null);\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(730, 520).parent(canvasParentRef);\n    // p5.noLoop();\n    canvasRef.current = p5.canvas;\n  };\n  const draw = p5 => {\n    p5.background(0);\n    p5.stroke(255);\n  };\n  const saveCanvasAsImage = async () => {\n    canvasToImage(canvasRef.current);\n  };\n  const postCanvasAsImage = async () => {\n    setHideMandelbrot(true);\n    await ApiService.postImage(canvasRef.current);\n    setPost(!post);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fern\",\n    style: {\n      display: hideMandelbrot ? 'none' : 'block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: postCanvasAsImage,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveCanvasAsImage,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"close\",\n      onClick: () => setHideMandelbrot(true),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Fern, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n_c = Fern;\nexport default Fern;\nvar _c;\n$RefreshReg$(_c, \"Fern\");","map":{"version":3,"names":["React","useState","useRef","Sketch","canvasToImage","ApiService","jsxDEV","_jsxDEV","Fern","_ref","_s","hideMandelbrot","setHideMandelbrot","post","setPost","canvasRef","setup","p5","canvasParentRef","createCanvas","parent","current","canvas","draw","background","stroke","saveCanvasAsImage","postCanvasAsImage","postImage","className","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/valgaug/Documents/Coding/CodeWorks/SoloProject/solo-project/solo-project-proposal/client/src/Components/05-03-Mandelbrot/index.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Sketch from 'react-p5';\nimport './style.css';\nimport canvasToImage from 'canvas-to-image';\nimport * as ApiService from '../../ApiService';\n\nfunction Fern({ hideMandelbrot, setHideMandelbrot, post, setPost }) {\n  // const [iterations, setIterations] = useState(50000);\n  const canvasRef = useRef(null);\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(730, 520).parent(canvasParentRef);\n    // p5.noLoop();\n    canvasRef.current = p5.canvas;\n  };\n\n  const draw = (p5) => {\n    p5.background(0);\n    p5.stroke(255);\n  };\n\n  const saveCanvasAsImage = async () => {\n    canvasToImage(canvasRef.current);\n  };\n\n  const postCanvasAsImage = async () => {\n    setHideMandelbrot(true);\n    await ApiService.postImage(canvasRef.current);\n    setPost(!post);\n  };\n\n  return (\n    <div\n      className='fern'\n      style={{\n        display: hideMandelbrot ? 'none' : 'block',\n      }}\n    >\n      <Sketch setup={setup} draw={draw} />\n      <form>\n        {/*       <div className='parameter'>\n          <span>Iterations (=nb of points):</span>\n          <label>{iterations}</label>\n          <input\n            type='range'\n            name='fern'\n            id='iteration'\n            min='0'\n            max='40000'\n            step='100'\n            value={iterations}\n            onChange={(e) => {\n              setIterations(e.target.value);\n            }}\n          ></input>\n        </div>\n        <div className='parameter'>\n          <span>Turning stems to leaves:</span>\n          <label>{param1}</label>\n          <input\n            type='range'\n            name='fern'\n            id='param1'\n            min='-0.5'\n            max='0.5'\n            step='0.01'\n            value={param1}\n            onChange={(e) => {\n              setParam1(e.target.value);\n            }}\n          ></input>\n          <br />\n        </div>\n        <div className='parameter'>\n          <span>Changing fern tilt:</span>\n          <label>{param2}</label>\n          <input\n            type='range'\n            name='fern'\n            id='param2'\n            min='-0.1'\n            max='0.1'\n            step='0.005'\n            value={param2}\n            onChange={(e) => {\n              setParam2(e.target.value);\n            }}\n          ></input>\n          <br />\n        </div> */}\n      </form>\n      <div className='buttons'>\n        <button onClick={postCanvasAsImage}>Submit</button>\n        <button onClick={saveCanvasAsImage}>Download</button>\n      </div>\n      <div className='close' onClick={() => setHideMandelbrot(true)}>\n        X\n      </div>\n    </div>\n  );\n}\n\nexport default Fern;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,aAAa;AACpB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,IAAIA,CAAAC,IAAA,EAAuD;EAAAC,EAAA;EAAA,IAAtD;IAAEC,cAAc;IAAEC,iBAAiB;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAAL,IAAA;EAChE;EACA,MAAMM,SAAS,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMc,KAAK,GAAGA,CAACC,EAAE,EAAEC,eAAe,KAAK;IACrCD,EAAE,CAACE,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,MAAM,CAACF,eAAe,CAAC;IACjD;IACAH,SAAS,CAACM,OAAO,GAAGJ,EAAE,CAACK,MAAM;EAC/B,CAAC;EAED,MAAMC,IAAI,GAAIN,EAAE,IAAK;IACnBA,EAAE,CAACO,UAAU,CAAC,CAAC,CAAC;IAChBP,EAAE,CAACQ,MAAM,CAAC,GAAG,CAAC;EAChB,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCtB,aAAa,CAACW,SAAS,CAACM,OAAO,CAAC;EAClC,CAAC;EAED,MAAMM,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCf,iBAAiB,CAAC,IAAI,CAAC;IACvB,MAAMP,UAAU,CAACuB,SAAS,CAACb,SAAS,CAACM,OAAO,CAAC;IAC7CP,OAAO,CAAC,CAACD,IAAI,CAAC;EAChB,CAAC;EAED,oBACEN,OAAA;IACEsB,SAAS,EAAC,MAAM;IAChBC,KAAK,EAAE;MACLC,OAAO,EAAEpB,cAAc,GAAG,MAAM,GAAG;IACrC,CAAE;IAAAqB,QAAA,gBAEFzB,OAAA,CAACJ,MAAM;MAACa,KAAK,EAAEA,KAAM;MAACO,IAAI,EAAEA;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACpC7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAmDO,eACP7B,OAAA;MAAKsB,SAAS,EAAC,SAAS;MAAAG,QAAA,gBACtBzB,OAAA;QAAQ8B,OAAO,EAAEV,iBAAkB;QAAAK,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACnD7B,OAAA;QAAQ8B,OAAO,EAAEX,iBAAkB;QAAAM,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjD,eACN7B,OAAA;MAAKsB,SAAS,EAAC,OAAO;MAACQ,OAAO,EAAEA,CAAA,KAAMzB,iBAAiB,CAAC,IAAI,CAAE;MAAAoB,QAAA,EAAC;IAE/D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAAC1B,EAAA,CA9FQF,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAgGb,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}